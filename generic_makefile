SPATCH=../../spatch

ARGS=-iso_file ../../standard.iso -compare_with_expected -cocci_file $(SP) \
-no_show_ctl_text -no_show_transinfo -no_parse_error_msg -no_show_misc

OBJS = $(SOURCES:.c=.ok)

all: $(OBJS)
	ls *ok 
	ls *failed

%.ok: %.c $(SPATCH) $(SP)
	/bin/rm -f $(<:.c=.ok) $(<:.c=.failed) /tmp/output.c
	(time $(SPATCH) $(ARGS) $<) 2> $(<:.c=.ok) || \
	(test -e $(<:.c=.ok) && mv $(<:.c=.ok) $(<:.c=.failed)) || \
	touch $(<:.c=.failed)
	(test -e /tmp/output.c && test -e $(<:.c=.ok) && \
	((diff -b -B -w /tmp/output.c $(<:.c=.res) >> $(<:.c=.ok)) || \
	true)) || true
	(test -e /tmp/output.c && test -e $(<:.c=.failed) && \
	((diff -b -B -w /tmp/output.c $(<:.c=.res) >> $(<:.c=.failed)) || \
	true)) || true


#-----------------------------------------------------------------------------
# Pad stuff
#-----------------------------------------------------------------------------
clean:
	rm -f *.ok *.failed

%.ok2: %.c $(SPATCH) $(SP)
	$(SPATCH) -iso_file ../../standard.iso -cocci_file $(SP) \
	-compare_with_expected -debug_cpp \
	 $<

info:
	-ls *.ok
	-ls *.failed
	make info_ok
	make info_failed

info_ok:
	../../extract_info_ok_failed.pl *.ok

info_failed:
	../../extract_info_ok_failed.pl *.failed

