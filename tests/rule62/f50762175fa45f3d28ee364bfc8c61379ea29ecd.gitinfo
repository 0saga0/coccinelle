commit f50762175fa45f3d28ee364bfc8c61379ea29ecd
Author: Alexander Viro <viro@math.psu.edu>
Date:   Sat Sep 21 21:55:23 2002 -0700

    [PATCH] blk_size[] is gone
    
    it is an ex-parrot

diff --git a/drivers/block/DAC960.c b/drivers/block/DAC960.c
index 23f8d25..5e4d5da 100644
--- a/drivers/block/DAC960.c
+++ b/drivers/block/DAC960.c
@@ -2002,11 +2002,6 @@ static void DAC960_UnregisterBlockDevice
     Remove the I/O Request Queue.
   */
   blk_cleanup_queue(BLK_DEFAULT_QUEUE(MajorNumber));
-  /*
-    Remove the Disk Partitions array, Partition Sizes array, Block Sizes
-    array, Max Sectors per Request array, and Max Segments per Request array.
-  */
-  blk_clear(MajorNumber);
 }
 
 static long disk_size(DAC960_Controller_T *Controller, int disk)
diff --git a/drivers/block/amiflop.c b/drivers/block/amiflop.c
index 80f51cf..c7ae611 100644
--- a/drivers/block/amiflop.c
+++ b/drivers/block/amiflop.c
@@ -1889,6 +1889,5 @@ void cleanup_module(void)
 	blk_cleanup_queue(BLK_DEFAULT_QUEUE(MAJOR_NR));
 	release_mem_region(CUSTOM_PHYSADDR+0x20, 8);
 	unregister_blkdev(MAJOR_NR, "fd");
-	blk_clear(MAJOR_NR);
 }
 #endif
diff --git a/drivers/block/ll_rw_blk.c b/drivers/block/ll_rw_blk.c
index 8b5ae9a..48771f4 100644
--- a/drivers/block/ll_rw_blk.c
+++ b/drivers/block/ll_rw_blk.c
@@ -46,16 +46,6 @@ static spinlock_t blk_plug_lock __cachel
 struct blk_dev_struct blk_dev[MAX_BLKDEV]; /* initialized by blk_dev_init() */
 
 /*
- * blk_size contains the size of all block-devices in units of 1024 byte
- * blocks:
- *
- * blk_size[MAJOR][MINOR]
- *
- * if (!blk_size[MAJOR]) then no minor size checking is done.
- */
-int * blk_size[MAX_BLKDEV];
-
-/*
  * How many reqeusts do we allocate per queue,
  * and how many do we "batch" on freeing them?
  */
diff --git a/drivers/block/ps2esdi.c b/drivers/block/ps2esdi.c
index bd099d1..a9f51f8 100644
--- a/drivers/block/ps2esdi.c
+++ b/drivers/block/ps2esdi.c
@@ -184,7 +184,6 @@ int __init ps2esdi_init(void)
 			" device, releasing resources\n");
 		unregister_blkdev(MAJOR_NR, "ed");
 		blk_cleanup_queue(BLK_DEFAULT_QUEUE(MAJOR_NR));
-		blk_clear(MAJOR_NR);
 		return error;
 	}
 	return 0;
@@ -236,7 +235,6 @@ cleanup_module(void) {
 	blk_cleanup_queue(BLK_DEFAULT_QUEUE(MAJOR_NR));
 	for (i = 0; i < ps2esdi_drives; i++)
 		del_gendisk(ps2esdi_gendisk + i);
-	blk_clear(MAJOR_NR);
 }
 #endif /* MODULE */
 
diff --git a/drivers/block/rd.c b/drivers/block/rd.c
index b4d99f7..802346f 100644
--- a/drivers/block/rd.c
+++ b/drivers/block/rd.c
@@ -418,7 +418,6 @@ static void __exit rd_cleanup (void)
 
 	devfs_unregister (devfs_handle);
 	unregister_blkdev( MAJOR_NR, "ramdisk" );
-	blk_clear(MAJOR_NR);
 }
 
 /* This is the registration and initialization section of the RAM disk driver */
diff --git a/drivers/block/xd.c b/drivers/block/xd.c
index 4ef6069..e19303a 100644
--- a/drivers/block/xd.c
+++ b/drivers/block/xd.c
@@ -1037,7 +1037,6 @@ static void xd_done (void)
 	for (i = 0; i < xd_drives; i++)
 		del_gendisk(xd_gendisk + i);
 	blk_cleanup_queue(BLK_DEFAULT_QUEUE(MAJOR_NR));
-	blk_clear(MAJOR_NR);
 	release_region(xd_iobase,4);
 }
 
diff --git a/drivers/ide/ide.c b/drivers/ide/ide.c
index 73d4eb6..f8d1777 100644
--- a/drivers/ide/ide.c
+++ b/drivers/ide/ide.c
@@ -1863,7 +1863,6 @@ #endif /* (CONFIG_BLK_DEV_IDEDMA) && !(C
 	unregister_blkdev(hwif->major, hwif->name);
 	blk_dev[hwif->major].data = NULL;
 	blk_dev[hwif->major].queue = NULL;
-	blk_clear(hwif->major);
 	gd = hwif->drives[0].disk;
 	if (gd) {
 		int i;
diff --git a/drivers/md/md.c b/drivers/md/md.c
index 2185f03..5ddea7f 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -3474,7 +3474,6 @@ #ifdef CONFIG_PROC_FS
 #endif
 
 	blk_dev[MAJOR_NR].queue = NULL;
-	blk_clear(MAJOR_NR);
 }
 #endif
 
diff --git a/drivers/mtd/ftl.c b/drivers/mtd/ftl.c
index ee91fc2..beb5a96 100644
--- a/drivers/mtd/ftl.c
+++ b/drivers/mtd/ftl.c
@@ -1314,7 +1314,6 @@ static void __exit cleanup_ftl(void)
     unregister_mtd_user(&ftl_notifier);
     unregister_blkdev(FTL_MAJOR, "ftl");
     blk_cleanup_queue(BLK_DEFAULT_QUEUE(FTL_MAJOR));
-    blk_clear(FTL_MAJOR);
 }
 
 module_init(init_ftl);
diff --git a/drivers/s390/block/dasd_genhd.c b/drivers/s390/block/dasd_genhd.c
index 4a069ac..f6d460e 100644
--- a/drivers/s390/block/dasd_genhd.c
+++ b/drivers/s390/block/dasd_genhd.c
@@ -153,7 +153,6 @@ dasd_unregister_major(struct major_info 
 	/* Clear block device pointers. */
 	major = mi->major;
 	blk_dev[major].queue = NULL;
-	blk_clear(major);
 
 	rc = unregister_blkdev(major, "dasd");
 	if (rc < 0)
diff --git a/drivers/s390/block/xpram.c b/drivers/s390/block/xpram.c
index 847a3e4..bf3544e 100644
--- a/drivers/s390/block/xpram.c
+++ b/drivers/s390/block/xpram.c
@@ -492,7 +492,6 @@ static void __exit xpram_exit(void)
 	int i;
 	for (i = 0; i < xpram_devs; i++)
 		del_gendisk(xpram_disks + i);
-	blk_clear(XPRAM_MAJOR);
 	unregister_blkdev(XPRAM_MAJOR, XPRAM_NAME);
 	devfs_unregister(xpram_devfs_handle);
 	unregister_sys_device(&xpram_sys_device);
diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
index 7d64702..44c1d0f 100644
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@ -1466,10 +1466,8 @@ static void __exit exit_sd(void)
 			vfree(sd_dsk_arr[k]);
 		vfree(sd_dsk_arr);
 	}
-	for (k = 0; k < N_USED_SD_MAJORS; k++) {
+	for (k = 0; k < N_USED_SD_MAJORS; k++)
 		blk_dev[SD_MAJOR(k)].queue = NULL;
-		blk_clear(SD_MAJOR(k));
-	}
 	sd_template.dev_max = 0;
 	remove_driver(&sd_template.scsi_driverfs_driver);
 }
diff --git a/drivers/scsi/sr.c b/drivers/scsi/sr.c
index d3f4bc0..0272347 100644
--- a/drivers/scsi/sr.c
+++ b/drivers/scsi/sr.c
@@ -863,7 +863,6 @@ static void __exit exit_sr(void)
 	sr_registered--;
 	if (scsi_CDs != NULL)
 		kfree(scsi_CDs);
-	blk_clear(MAJOR_NR);
 
 	sr_template.dev_max = 0;
 	remove_driver(&sr_template.scsi_driverfs_driver);
diff --git a/fs/block_dev.c b/fs/block_dev.c
index be2f5cc..4b1adc0 100644
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@ -652,8 +652,6 @@ static int do_open(struct block_device *
 			bdev->bd_offset = 0;
 			if (g)
 				sect = get_capacity(g);
-			else if (blk_size[major(dev)])
-				sect = blk_size[major(dev)][minor(dev)] << 1;
 			bd_set_size(bdev, (loff_t)sect << 9);
 			bdi = blk_get_backing_dev_info(bdev);
 			if (bdi == NULL)
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 8412950..fa07984 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -346,8 +346,6 @@ extern int blk_queue_init_tags(request_q
 extern void blk_queue_free_tags(request_queue_t *);
 extern void blk_queue_invalidate_tags(request_queue_t *);
 
-extern int * blk_size[MAX_BLKDEV];	/* in units of 1024 bytes */
-
 #define MAX_PHYS_SEGMENTS 128
 #define MAX_HW_SEGMENTS 128
 #define MAX_SECTORS 255
@@ -358,11 +356,6 @@ #define blkdev_entry_to_request(entry) l
 
 extern void drive_stat_acct(struct request *, int, int);
 
-static inline void blk_clear(int major)
-{
-	blk_size[major] = NULL;
-}
-
 static inline int queue_hardsect_size(request_queue_t *q)
 {
 	int retval = 512;
diff --git a/kernel/ksyms.c b/kernel/ksyms.c
index 20c26b9..557ae8f 100644
--- a/kernel/ksyms.c
+++ b/kernel/ksyms.c
@@ -335,7 +335,6 @@ EXPORT_SYMBOL(tty_unregister_driver);
 EXPORT_SYMBOL(tty_std_termios);
 
 /* block device driver support */
-EXPORT_SYMBOL(blk_size);
 EXPORT_SYMBOL(blk_dev);
 EXPORT_SYMBOL(bdev_read_only);
 EXPORT_SYMBOL(set_device_ro);
