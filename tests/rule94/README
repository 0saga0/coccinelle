Semantic patch in rule94.cocci
OK result for 21 files out of 28, including 4 files where the CE was
omitted in some cases.
Get the wrong answer in 6 cases; in all cases some transformation was not
done, either because the pattern didn't match or the enclosing function
couldn't be parsed.
Have an error in one case, because can't unparse the transformed function,
although the unparsing problem has nothing to do with the collateral
evolution.

auerswald.c
 * [status] bugs, spatch-ok
 by hand, two cases were updated and two were not.  all are update by
 coccinelle

cp2101.c
 * [status] ok

cypress_m8.c
 * [status] ok

ehci-mem.c
 * [status] wrong
 the hand transformation additionally inverts the sense of an if to move a
 return into the then branch, and drop a goto that now would just go to the
 next line.

ehci-sched.c
 * [status] wrong 
 the sense of the normal null test is inverted, so that it tests whether
 the result is not null, and does the memset there, rather than testing for
 null, returning if the result is true, and calling memset afterwards.

ftdi_sio.c
 * [status] ok

garmin_gps.c
 * [status] ok

hc_crisv10.c
 * [status] ok

io_edgeport.c
 * [status] bugs, spatch-ok
 by hand, one case was updated and one was not.  all are update by coccinelle 

io_ti.c
 * [status] ok

ir-usb.c
 * [status] ok

keyspan.c
 * [status] ok

kobil_sct.c
 * [status] wrong
 in one case, we don't drop an else branch that becomes empty
 in another case the first argument of kmalloc doesn't match the third
 argument of memset (a multiplication, as in the first rule, is further
 multiplied by sizeof(char))

mct_u232.c
 * [status] ok

mon_main.c
 * [status] wrong
 not able to parse the function that contains the CE site because of the
 incorrect adding of a global typedef

mon_text.c
 * [status] ok

option.c
 * [status] wrong
 need to be able to access the type of the expression matched by a metavariable

ov511.c
 * [status] ok

pl2303.c
 * [status] wrong
 need to be able to match 7 to 0x07, not a constant in SP

pwc-if.c
 * [status] error
 unparsing problem, because there is a break after a return.

se401.c
 * [status] ok

stv680.c
 * [status] ok

ti_usb_3410_5052.c
 * [status] bugs, spatch-ok
 by hand, one case was updated and one was not.  all are update by coccinelle 

usblcd.c
 * [status] ok

usb-serial.c
 * [status] ok

usbtest.c
 * [status] spatch-ok
 in the .c file, parentheses are missing around the argument of sizeof.
 this is added by hand, but not by coccinelle

visor.c
 * [status] ok

zd1201.c
 * [status] bugs, spatch-ok
 by hand, two cases was updated and one was not.  all are update by coccinelle 


Key: ok means a .ok file is generated
     spatch-ok means that the result is different in inessential ways
     wrong means that the result is wrong
     error means that coccinelle crashes
     bugs refers to cases where the hand transformation is wrong.
