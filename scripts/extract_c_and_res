#!/usr/bin/perl -w
use strict;

my $prefix = "devfs"; #TODO use it for $base and $res
my $target_dir = "/tmp/extract_c_and_res/$ARGV[0]";
`mkdir -p $target_dir`;
my $old_dir = "/tmp/extract_c_and_res/$ARGV[0]_old";
`mkdir -p $old_dir`;
my $new_dir = "/tmp/extract_c_and_res/$ARGV[0]_new";
`mkdir -p $new_dir`;

die "usage: $0 commithashafter [commithashbefore]" 
  if(@ARGV <= 0 || @ARGV >= 3);

my $commit1 = $ARGV[0];
my $commit2 = $ARGV[1] || "$commit1^";

my $tmpfile = "$target_dir/$commit1.gitinfo";

my $counter=0;

`git show $commit1 > $tmpfile `;

open FILE, "$tmpfile" or die "$!";

my $h = {};

sub pr2 { print "$_[0]\n"; }

sub mylog { print @_;}

my @files = ();
while(<FILE>) {

    # allow other dir ? # fs|mm   there is drivers under arch/ too
    if(/^diff --git a\/((drivers|sound)\/.*?\.c) b/){ 
        mylog "  $1\n";
        push @files, $1;
    }
    #if(/^diff --git a\/(sound\/.*?) b/){}
    elsif(/^diff --git a\//) {
      mylog " not driver:$_";
    }
    elsif(/^diff/) {
      die "strange diff line: $_";
    }
}

foreach my $f (@files) {
  my ($base) = `basename $f`;
  chomp $base;
  my $res = $base;
  $res =~ s/\.c$/.res/;
  pr2 "processing: $f $base $res";
  if(-e "$target_dir/$base") {
    $counter++;                              
    $base = "${counter}_$base";
    pr2 "try transform one file because already exist: $base";
  }                         
  die "one of the file already exist: $base" if (-e "$target_dir/$base");

  `git-cat-file blob $commit2:$f > $target_dir/$base`;
  `git-cat-file blob $commit1:$f > $target_dir/$res`;
  `git-cat-file blob $commit2:$f > $old_dir/$base`;
  `git-cat-file blob $commit1:$f > $new_dir/$base`;


}




