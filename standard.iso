Expression

@@
expression *X;
@@

X == NULL <=> !X <=> NULL == X

Expression

@@
int X;
@@

X == 0 <=> !X <=> 0 == X

Expression

@@
expression X;
@@

X != 0 <=> 0 != X => X

Statement

@@
int X;
statement S1, S2;
@@

if (X) S1 else S2 => if (X != 0) S1 else S2

Statement

@@
int X;
statement S;
@@

if (X) S => if (X != 0) S <=> if (0 != X) S

Expression

@@
expression X, Y;
@@

X + Y

<=>

Y + X

Statement

@@
expression X;
statement S1, S2;
@@

if (X) S1 else S2

<=>

if (!X) S2 else S1


// pad: does not work well. cf when use with rule9.cocci.
// Statement
// 
// @@
// expression X;
// statement S;
// @@
// 
// if (X) { S }
// 
// <=>
// 
// if (X) S

Declaration

@@
type T;
identifier Z;
@@

T Z = ...;

<=>

T Z;

Declaration

@@
identifier Z;
@@

int Z;

=>

signed int Z;

//Statement
//
//@@
//expression E;
//@@
//
//{ ... return E; } => return E;
//// maybe a cocci patch should require something that looks like what is on
//// the left above to occur in a if or while
