open Common

(* work with tests/ *)
val testone : 
 string (* test file *) -> bool (* compare_expected *) -> filename (* iso *) ->
 filename (* outfile *) -> unit
val testall : string (* iso *) -> unit

(* work with the .failed and .ok files generated by generic_makefile *)
val test_regression_okfailed : unit -> unit



(* to test/debug the coccinelle subsystems *)

val test_tokens_c : filename -> unit
(* parse and handle some regression information when called with dirmode *)
val test_parse_c  : filename list -> bool (* dirmode *) -> unit
val test_parse_unparse : filename -> filename (* out *) -> unit
val test_cfg : filename (* foo.c or foo.c:main *) -> unit
val test_typeur : filename -> filename (* out *) -> unit

val test_compare_c : filename -> filename -> unit (* result is in unix code *)
val test_compare_c_hardcoded : unit -> unit

val test_parse_cocci : filename -> filename (* iso *) -> unit

val test_xxx : unit -> unit
