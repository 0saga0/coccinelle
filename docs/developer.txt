-*- org -*-

* How to install coccinelle 
------------------------------

** CVS 

export CVS_RSH=ssh
export CVSROOT=:ext:topps.diku.dk:/var/cvs/cocci

You must be a member of the cocci group.

Then 
cvs checkout coccinelle.

** Dependencies

see install.txt

** Tools

ocaml, emacs.

** Compile

make depend
make


* How to use coccinelle 
------------------------------

** Test

** Tutorial 

** spatch, sgrep

** Emacs coccinelle mode

see emacs/cocci.el for instructions.

** Manual

see docs/manual.tex

* How to extend coccinelle 
------------------------------


* Documentation on coccinelle internals
----------------------------------------
can get the papers from coccinelle website:
 http://www.emn.fr/x-info/coccinelle

cvs checkout working-documents

the code :)



** Software architecture 

see docs/graph-module-dependencies.ps

** coccinelle/ organization 


* Being a coccinelle developer
------------------------------

** Conventions/advices
Do not use the 'open' OCaml module instruction.
Qualify, like in 'Cocci.full_engine x'.

Have makefile in each directory with a clean:, depend:, 
and possibly all: and all.opt: target.


* How to contribute to Linux 
------------------------------

git

* Tools 
------------------------------

** profiling: gprof

** debugging: ocamldebug, the ocaml replay debugger

** Emacs

** CVS tricks 

To remove <directory>:

    cvs release -d <directory>

To update the code and allow the checkout of new directories but
pruning empty (obsolete but still there because CVS sux) directories:
 
    cvs update -d -P

To see what has changed since 2 days

    cvs diff -u -D "2 days ago"

To create a new CVS module:

    mkdir nameofdir; 
    cd nameofdir; 
    cvs import -m"your commit message" <nameofdir> yoyo start
    cd ..;
    rm -rf nameofdir;
    cvs checkout nameofdir
yoyo is a dummy name




* Coders
------------------------------

julia@diku.dk
padator@wanadoo.fr, yoann.padioleau@gmail.com
rrhansen@diku.dk
Henrik Stuart <henrik@hstuart.dk>
