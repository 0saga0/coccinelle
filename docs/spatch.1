.\"  -*- nroff -*-
.\" Please adjust this date whenever revising the manpage.
.TH SPATCH 1 "December 15, 2008"

.\" see http://www.fnal.gov/docs/products/ups/ReferenceManual/html/manpages.html
.\" see http://www.linuxjournal.com/article/1158
.\" see http://www.schweikhardt.net/man_page_howto.html
.\" groff -Tascii -man ./spatch.1 | more
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.\"
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invode bold face and italics, 
.\" respectively. Also \fR for roman.
.SH NAME
spatch \- apply a semantic patch file to a set of C files

.SH SYNOPSIS
.B spatch
.B -sp_file
.I <SP>
.I <files>
.B [-o 
.I <outfile>
.B ] 
.B [-iso_file 
.I <iso>
.B ] 
.B [
.I options
.B ]
.\"
.SH DESCRIPTION
\fBspatch\fP is an advanced program transformation tool for C.
The programmer writes transformations as semantic patches which
looks like traditional patches but can transform hundreds of files,
at thousands of code sites.

.PP
Further information is available at
\fBhttp://www.emn.fr/x-info/coccinelle\fP.

.SH OPTIONS
Here is a summary of all the options:

.TP
.B -sp_file \fI<file>\fP
the semantic patch file
.TP
.B -o                   \fI<file>\fP
the output file
.TP
.B -inplace             
do the modification on the file directly
.TP
.B -outplace            
store modifications in a .cocci_res file
.TP
.B -U                   \fI<k>\fP
set number of diff context lines
.TP
.B -partial_match       
report partial matches of the SP on the C file
.TP
.B -iso_file            \fI<file>\fP
(default=/home/pad/c-coccinelle/standard.iso)
.TP
.B -macro_file          \fI<file>\fP
(default=/home/pad/c-coccinelle/standard.h)
.TP
.B -all_includes        
causes all available include files to be used
.TP
.B -no_includes         
causes not even local include files to be used
.TP
.B -I                   \fI<dir>\fP
containing the Linux headers (optional)
.TP
.B -dir                 \fI<dir>\fP
process all files in directory recursively
.TP 
.B -include_headers     
process header files independently
.TP
.B -use_glimpse         
works with -dir, use info generated by glimpseindex
.TP
.B -patch               \fI<dir>\fP
path name with respect to which a patch should be created
for a file in the current directory
.TP
.B -kbuild_info         \fI<file>\fP
improve -dir by grouping related c files
.TP
.B -pyoutput            
Sets output routine: Standard values: <coccilib.output.Gtk|coccilib.output.Console>
.TP
.B -version             
Show version of program
.TP
.B -date                
guess what
.TP
.B -shorthelp           
see short list of options
.TP
.B -longhelp            
see all the available options in different categories
.TP 
.B \-help, \-\-help             
Show summary of options.



.SH EXAMPLES

  ./spatch -sp_file foo.cocci foo.c -o /tmp/newfoo.c

The output is in the file /tmp/newfoo.c which will contain the result 
of applying the semantic patch foo.cocci to the C file foo.c
modulo a set of isomorphisms contained in standard.iso 
(standard.iso is by default located in /usr/local/share/coccinelle/standard.iso).

It is also possible to apply spatch to all of the C files in
a directory: 

  ./spatch -cocci_file foo.cocci -dir foodir . 

In this case, it is useful to add the option -quiet. 

If the semantic patch is not working as expected, it can 
be useful to use the option -show_binding_in_out after -quiet to 
get a trace of the metavariable bindings used for each rule.

.SH FILES
.I /usr/local/share/coccinelle/standard.iso
.RS
This file contains the default set of isomorphisms.
.RE
.I /usr/local/share/coccinelle/standard.h
.RS
This file contains the default set of macros hints.

.SH ENVIRONMENT
.IP COCCINELLE_HOME
The path to coccinelle share directory. Defaut is 
.I /usr/local/share/coccinelle

.SH REFERENCES
Y. Padioleau, J.L. Lawall, R.R Hansen, G. Muller
"Documenting and Automating Collateral Evolutions in Linux Device Driver"
.I EuroSys 2008, 
Glasgow, Scotland (April 2008) pp. 247-260.

.SH AUTHOR
\fBspatch\fP was written by Julia Lawall <julia@diku.dk>, Yoann Padioleau
<yoann.padioleau@gmail.com>, Rene Rydhof Hansen <rrhansen@diku.dk> and
Henrik stuart <henrik@hstuart.dk>.
.PP
This manual page was written by Yoann Padioleau <yoann.padioleau@gmail.com>.

.SH REPORTING BUGS
Send a mail to <julia@diku.dk> or <yoann.padioleau@gmail.com>

.SH COPYRIGHT
Copyright 2005-2008, Ecole des Mines de Nantes, University of Copenhagen.
spatch is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, according to version 2 of the License.

.SH SEE ALSO
.BR patch (1).

