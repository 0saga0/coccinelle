@@
expression X;
@@

f(X);
...
g(X);
h(X);

@@
expression X,Y,Z;
@@

f(X);
...
g(Y);
h(Z);

@@
expression X,Y,Z;
@@

f(X);
... WHEN != h(Z)
g(Y);
h(Z);

@@
expression X,Y,Z,Q;
@@

f(X);
... WHEN != h(Q)
g(Y);
h(Z);

@@
expression X,Z;
@@

if (X) {
  ...
}
else {
  g(X);
}
h(Z);

@@
expression X,Y;
@@

<...
(
 h(X)
|
 g(Y)
)
...>

@@
expression X,Y;
@@

<...
(
 h(X)
|
 g(Y)
)
...>
r(X);

@@
expression X,Y;
@@

(
 h(X)
|
 g(Y)
)

@@
expression X,Y;
@@

  m(Y);
? h(X);
  g(Y);

@@
struct Scsi_Host_Template sht;
!local function proc_info_func;
@@

sht.proc_info = proc_info_func;

@@
identifier buffer, start, offset, length, inout, hostptr, hostno;
@@

  proc_info_func(
       char *buffer, char **start, off_t offset,
       int length, 
       int hostno, 
       int inout) {
    ...
    struct Scsi_Host *hostptr;
    ...
    hostptr = scsi_host_hn_get(hostno);
    ...
?   if (hostptr == NULL) { ... }
    ...
?   scsi_host_put(hostptr);
    ...
  }

@@
expression E;
@@

proc_info_func(...) {
    <...
(
   E->host_no == hostno
|
   hostno
)
    ...>
  }
